Parameters:
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - SMALL
      - MEDIUM
    Description: Select Environment Size (S,M)
  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.  
Mappings:
  RegionMap:
    eu-west-1:
      AMALINUX : ami-1a962263 # Ireland - Amazon Linux ami
  InstanceSize:
    SMALL:
      EC2 : t2.micro
    MEDIUM:
      EC2 : t2.small
Resources:
  EC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMALINUX] # Dynamic mapping + Pseudo Parameter
      InstanceType: !FindInMap [InstanceSize, !Ref EnvironmentSize, EC2]
      KeyName: !Ref KeyName
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            yum update -y aws-cfn-bootstrap # good practice - always do this.
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets wordpress --region ${AWS::Region}
            yum -y update
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2 --region ${AWS::Region} {Fn::Base64: ${EC2WaitHandle} }  

    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          wordpress:
            - "configure_cfn"
            - "install_wordpress"
            - "config_wordpress"

        configure_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets wordpress --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
            /var/www/html/index2.html:
              content: "test9"
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"

        install_wordpress:
          packages:
            yum:
              httpd: []
              php: []
              mysql: []
              php-mysql: []
          sources:
            /var/www/html: "http://wordpress.org/latest.tar.gz"
          services:
            sysvinit:
              httpd:
                enabled: "true"
                ensureRunning: "true"

        config_wordpress:
          commands:
            01_clone_config:
              cwd: "/var/www/html/wordpress"
              test: "test ! -e /var/www/html/wordpress/wp-config.php"
              command: "cp wp-config-sample.php wp-config.php"
  EC2WaitHandle:
    Type: 'AWS::CloudFormation::WaitConditionHandle'
  EC2WaitCondition:
    Type: 'AWS::CloudFormation::WaitCondition'
    DependsOn: EC2
    Properties:
      Count: 1
      Handle: !Ref EC2WaitHandle
      Timeout: '300' # 5 minuten
  S3:
    Type: AWS::S3::Bucket
